#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ Greenwich —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –º–∞–ø–ø–∏–Ω–≥–æ–º
"""

import os
import sys
import django
from bson import ObjectId
from datetime import datetime, timezone

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/home/art/PycharmProjects/anton_houses')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'anton_houses.settings')
django.setup()

from pymongo import MongoClient
from django.conf import settings

def get_mongo_connection():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–µ–∫—Ç–∞."""
    uri = getattr(settings, 'MONGO_URI', 'mongodb://root:Kfleirb_17@176.98.177.188:27017/admin')
    db_name = getattr(settings, 'DB_NAME', 'houses')
    client = MongoClient(uri)
    return client[db_name]

def update_greenwich_record():
    """–û–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å Greenwich —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –º–∞–ø–ø–∏–Ω–≥–æ–º"""
    print("üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–ü–ò–°–ò GREENWICH")
    print("=" * 50)
    
    db = get_mongo_connection()
    unified_col = db['unified_houses']
    
    # –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø–∏—Å—å Greenwich
    greenwich_unified = unified_col.find_one({'development.name': '–ñ–ö ¬´Greenwich¬ª'})
    
    if not greenwich_unified:
        print("‚ùå –ó–∞–ø–∏—Å—å Greenwich –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å: {greenwich_unified['_id']}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    source_ids = greenwich_unified.get('_source_ids', {})
    
    avito_record = None
    if source_ids.get('avito'):
        avito_col = db['avito']
        avito_record = avito_col.find_one({'_id': ObjectId(source_ids['avito'])})
        print(f"üì± Avito –∑–∞–ø–∏—Å—å: {bool(avito_record)}")
    
    domclick_record = None
    if source_ids.get('domclick'):
        domclick_col = db['domclick']
        domclick_record = domclick_col.find_one({'_id': ObjectId(source_ids['domclick'])})
        print(f"üèóÔ∏è DomClick –∑–∞–ø–∏—Å—å: {bool(domclick_record)}")
    
    if not avito_record or not domclick_record:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏")
        return
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –º–∞–ø–ø–∏–Ω–≥–æ–º
    print(f"\nüîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å...")
    
    # 1. –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    new_record = {
        'latitude': greenwich_unified.get('latitude'),
        'longitude': greenwich_unified.get('longitude'),
        'source': 'unified',
        'created_by': 'script',
        'is_featured': greenwich_unified.get('is_featured', False),
        'agent_id': greenwich_unified.get('agent_id'),
        'updated_at': datetime.now(timezone.utc),
        '_source_ids': source_ids
    }
    
    # 2. Development –∏–∑ Avito
    avito_dev = avito_record.get('development', {})
    new_record['development'] = {
        'name': avito_dev.get('name', ''),
        'address': avito_dev.get('address', ''),
        'price_range': avito_dev.get('price_range', ''),
        'parameters': avito_dev.get('parameters', {}),
        'korpuses': avito_dev.get('korpuses', []),
        'photos': []  # –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –∏–∑ DomClick
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –ñ–ö –∏–∑ DomClick
    domclick_dev = domclick_record.get('development', {})
    if domclick_dev.get('photos'):
        new_record['development']['photos'] = domclick_dev['photos']
    
    # 3. –û–±—ä–µ–¥–∏–Ω—è–µ–º apartment_types —Å –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ú –º–∞–ø–ø–∏–Ω–≥–æ–º
    new_record['apartment_types'] = {}
    
    avito_apt_types = avito_record.get('apartment_types', {})
    domclick_apt_types = domclick_record.get('apartment_types', {})
    
    # –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –º–∞–ø–ø–∏–Ω–≥
    name_mapping = {
        '–°—Ç—É–¥–∏—è': '–°—Ç—É–¥–∏—è',
        '1 –∫–æ–º.': '1',
        '1-–∫–æ–º–Ω': '1',
        '1-–∫–æ–º–Ω.': '1',
        '2 –∫–æ–º.': '2',  # ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û
        '2': '2',
        '2-–∫–æ–º–Ω': '2',
        '2-–∫–æ–º–Ω.': '2',
        '3': '3',
        '3-–∫–æ–º–Ω': '3',
        '3-–∫–æ–º–Ω.': '3',
        '4': '4',
        '4-–∫–æ–º–Ω': '4',
        '4-–∫–æ–º–Ω.': '4',
        '4-–∫–æ–º–Ω.+': '4',
        '4-–∫–æ–º–Ω+': '4'
    }
    
    processed_types = set()
    changes = []
    
    for dc_type_name, dc_type_data in domclick_apt_types.items():
        # –£–ø—Ä–æ—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞
        simplified_name = name_mapping.get(dc_type_name, dc_type_name)
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ —ç—Ç–æ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–∏–ø
        if simplified_name in processed_types:
            continue
        processed_types.add(simplified_name)
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏–∑ DomClick
        dc_apartments = dc_type_data.get('apartments', [])
        if not dc_apartments:
            continue
        
        # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–∏–ø –≤ Avito
        avito_apartments = []
        for avito_type_name, avito_data in avito_apt_types.items():
            avito_simplified = name_mapping.get(avito_type_name, avito_type_name)
            if avito_simplified == simplified_name:
                avito_apartments = avito_data.get('apartments', [])
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ç–∏–ø '{simplified_name}': DomClick '{dc_type_name}' + Avito '{avito_type_name}' ({len(avito_apartments)} –∫–≤–∞—Ä—Ç–∏—Ä)")
                break
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä –≤ DomClick
        combined_apartments = []
        
        for i, dc_apt in enumerate(dc_apartments):
            # –ü–æ–ª—É—á–∞–µ–º –í–°–ï —Ñ–æ—Ç–æ —ç—Ç–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏–∑ DomClick –∫–∞–∫ –ú–ê–°–°–ò–í
            apartment_photos = dc_apt.get('photos', [])
            
            # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç—É –∫–≤–∞—Ä—Ç–∏—Ä—É
            if not apartment_photos:
                continue
            
            # –ë–µ—Ä–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É –∏–∑ Avito (—Ü–∏–∫–ª–∏—á–µ—Å–∫–∏)
            avito_apt = avito_apartments[i % len(avito_apartments)] if avito_apartments else {}
            
            combined_apartments.append({
                'title': avito_apt.get('title', ''),
                'price': avito_apt.get('price', ''),
                'pricePerSquare': avito_apt.get('pricePerSquare', ''),
                'completionDate': avito_apt.get('completionDate', ''),
                'url': avito_apt.get('urlPath', ''),
                'image': apartment_photos  # –ú–ê–°–°–ò–í –≤—Å–µ—Ö —Ñ–æ—Ç–æ —ç—Ç–æ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏!
            })
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å —Ñ–æ—Ç–æ
        if combined_apartments:
            new_record['apartment_types'][simplified_name] = {
                'apartments': combined_apartments
            }
            changes.append(f"‚úÖ {simplified_name}-–∫–æ–º–Ω: {len(combined_apartments)} –∫–≤–∞—Ä—Ç–∏—Ä (–±—ã–ª–æ {len(greenwich_unified.get('apartment_types', {}).get(simplified_name, {}).get('apartments', []))})")
        else:
            changes.append(f"‚ùå {simplified_name}-–∫–æ–º–Ω: –Ω–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä —Å —Ñ–æ—Ç–æ")
    
    # 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å...")
    
    result = unified_col.replace_one(
        {'_id': greenwich_unified['_id']},
        new_record
    )
    
    if result.modified_count == 1:
        print(f"‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        print(f"\nüìä –ò–ó–ú–ï–ù–ï–ù–ò–Ø:")
        for change in changes:
            print(f"   {change}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏")
    
    print(f"\n" + "=" * 50)
    print("üèÅ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")

if __name__ == "__main__":
    update_greenwich_record()
