#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø–∏—Å–∏ Greenwich
"""

import os
import sys
import django
from bson import ObjectId

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/home/art/PycharmProjects/anton_houses')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'anton_houses.settings')
django.setup()

from pymongo import MongoClient
from django.conf import settings

def get_mongo_connection():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–µ–∫—Ç–∞."""
    uri = getattr(settings, 'MONGO_URI', 'mongodb://root:Kfleirb_17@176.98.177.188:27017/admin')
    db_name = getattr(settings, 'DB_NAME', 'houses')
    client = MongoClient(uri)
    return client[db_name]

def diagnose_greenwich():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–ø–∏—Å–∏ Greenwich"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–ü–ò–°–ò GREENWICH")
    print("=" * 50)
    
    db = get_mongo_connection()
    
    # 1. –ò—â–µ–º –∑–∞–ø–∏—Å—å Greenwich –≤ unified_houses
    print("\n1Ô∏è‚É£ –ü–û–ò–°–ö –í UNIFIED_HOUSES:")
    unified_col = db['unified_houses']
    greenwich_unified = unified_col.find_one({'development.name': '–ñ–ö ¬´Greenwich¬ª'})
    
    if greenwich_unified:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å: {greenwich_unified['_id']}")
        print(f"üìä –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {greenwich_unified.get('_source_ids', {})}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º apartment_types
        apt_types = greenwich_unified.get('apartment_types', {})
        print(f"üè† –¢–∏–ø—ã –∫–≤–∞—Ä—Ç–∏—Ä –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏:")
        for apt_type, apt_data in apt_types.items():
            apartments = apt_data.get('apartments', [])
            print(f"   - {apt_type}: {len(apartments)} –∫–≤–∞—Ä—Ç–∏—Ä")
            if apartments:
                first_apt = apartments[0]
                print(f"     –ü–µ—Ä–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞: {first_apt.get('title', 'N/A')}")
                print(f"     –¶–µ–Ω–∞: {first_apt.get('price', 'N/A')}")
                print(f"     –§–æ—Ç–æ: {len(first_apt.get('image', []))} —à—Ç.")
    else:
        print("‚ùå –ó–∞–ø–∏—Å—å Greenwich –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ unified_houses")
        return
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    source_ids = greenwich_unified.get('_source_ids', {})
    
    print(f"\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ò–°–•–û–î–ù–´–• –ó–ê–ü–ò–°–ï–ô:")
    
    # Avito
    if source_ids.get('avito'):
        print(f"\nüì± AVITO ({source_ids['avito']}):")
        avito_col = db['avito']
        avito_record = avito_col.find_one({'_id': ObjectId(source_ids['avito'])})
        if avito_record:
            print(f"‚úÖ –ó–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞: {avito_record.get('development', {}).get('name', 'N/A')}")
            avito_apt_types = avito_record.get('apartment_types', {})
            print(f"üè† –¢–∏–ø—ã –∫–≤–∞—Ä—Ç–∏—Ä –≤ Avito:")
            for apt_type, apt_data in avito_apt_types.items():
                apartments = apt_data.get('apartments', [])
                print(f"   - {apt_type}: {len(apartments)} –∫–≤–∞—Ä—Ç–∏—Ä")
                if apartments:
                    first_apt = apartments[0]
                    print(f"     –ü–µ—Ä–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞: {first_apt.get('title', 'N/A')}")
                    print(f"     –¶–µ–Ω–∞: {first_apt.get('price', 'N/A')}")
        else:
            print("‚ùå –ó–∞–ø–∏—Å—å Avito –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # DomClick
    if source_ids.get('domclick'):
        print(f"\nüèóÔ∏è DOMCLICK ({source_ids['domclick']}):")
        domclick_col = db['domclick']
        domclick_record = domclick_col.find_one({'_id': ObjectId(source_ids['domclick'])})
        if domclick_record:
            print(f"‚úÖ –ó–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞: {domclick_record.get('development', {}).get('complex_name', 'N/A')}")
            domclick_apt_types = domclick_record.get('apartment_types', {})
            print(f"üè† –¢–∏–ø—ã –∫–≤–∞—Ä—Ç–∏—Ä –≤ DomClick:")
            for apt_type, apt_data in domclick_apt_types.items():
                apartments = apt_data.get('apartments', [])
                print(f"   - {apt_type}: {len(apartments)} –∫–≤–∞—Ä—Ç–∏—Ä")
                if apartments:
                    first_apt = apartments[0]
                    print(f"     –ü–µ—Ä–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞: {first_apt.get('title', 'N/A')}")
                    photos = first_apt.get('photos', [])
                    print(f"     –§–æ—Ç–æ: {len(photos)} —à—Ç.")
                    if photos:
                        print(f"     –ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ: {photos[0]}")
        else:
            print("‚ùå –ó–∞–ø–∏—Å—å DomClick –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # DomRF
    if source_ids.get('domrf'):
        print(f"\nüè¢ DOMRF ({source_ids['domrf']}):")
        domrf_col = db['domrf']
        domrf_record = domrf_col.find_one({'_id': ObjectId(source_ids['domrf'])})
        if domrf_record:
            print(f"‚úÖ –ó–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞: {domrf_record.get('name', 'N/A')}")
        else:
            print("‚ùå –ó–∞–ø–∏—Å—å DomRF –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # 3. –ê–Ω–∞–ª–∏–∑ –º–∞–ø–ø–∏–Ω–≥–∞ –Ω–∞–∑–≤–∞–Ω–∏–π
    print(f"\n3Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ú–ê–ü–ü–ò–ù–ì–ê –ù–ê–ó–í–ê–ù–ò–ô:")
    if avito_record and domclick_record:
        avito_apt_types = avito_record.get('apartment_types', {})
        domclick_apt_types = domclick_record.get('apartment_types', {})
        
        print(f"üì± –ù–∞–∑–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –≤ Avito: {list(avito_apt_types.keys())}")
        print(f"üèóÔ∏è –ù–∞–∑–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –≤ DomClick: {list(domclick_apt_types.keys())}")
        
        # –ú–∞–ø–ø–∏–Ω–≥ –∏–∑ –∫–æ–¥–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô)
        name_mapping = {
            '–°—Ç—É–¥–∏—è': '–°—Ç—É–¥–∏—è',
            '1 –∫–æ–º.': '1',
            '1-–∫–æ–º–Ω': '1',
            '1-–∫–æ–º–Ω.': '1',
            '2 –∫–æ–º.': '2',  # ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: –¥–æ–±–∞–≤–ª–µ–Ω –º–∞–ø–ø–∏–Ω–≥ –¥–ª—è Avito
            '2': '2',
            '2-–∫–æ–º–Ω': '2',
            '2-–∫–æ–º–Ω.': '2',
            '3': '3',
            '3-–∫–æ–º–Ω': '3',
            '3-–∫–æ–º–Ω.': '3',
            '4': '4',
            '4-–∫–æ–º–Ω': '4',
            '4-–∫–æ–º–Ω.': '4',
            '4-–∫–æ–º–Ω.+': '4',
            '4-–∫–æ–º–Ω+': '4'
        }
        
        print(f"\nüîÑ –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ú–ê–ü–ü–ò–ù–ì–ê:")
        for dc_type_name in domclick_apt_types.keys():
            simplified_name = name_mapping.get(dc_type_name, dc_type_name)
            print(f"   DomClick '{dc_type_name}' ‚Üí '{simplified_name}'")
        
        for avito_type_name in avito_apt_types.keys():
            simplified_name = name_mapping.get(avito_type_name, avito_type_name)
            print(f"   Avito '{avito_type_name}' ‚Üí '{simplified_name}'")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
    print(f"\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –õ–û–ì–ò–ö–ò –û–ë–™–ï–î–ò–ù–ï–ù–ò–Ø:")
    if avito_record and domclick_record:
        avito_apt_types = avito_record.get('apartment_types', {})
        domclick_apt_types = domclick_record.get('apartment_types', {})
        
        processed_types = set()
        
        for dc_type_name, dc_type_data in domclick_apt_types.items():
            simplified_name = name_mapping.get(dc_type_name, dc_type_name)
            
            if simplified_name in processed_types:
                print(f"‚ö†Ô∏è –¢–∏–ø '{simplified_name}' —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º '{dc_type_name}'")
                continue
            processed_types.add(simplified_name)
            
            dc_apartments = dc_type_data.get('apartments', [])
            print(f"\nüîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–∏–ø '{simplified_name}' (–∏–∑ DomClick '{dc_type_name}'):")
            print(f"   –ö–≤–∞—Ä—Ç–∏—Ä –≤ DomClick: {len(dc_apartments)}")
            
            # –ò—â–µ–º –≤ Avito
            avito_apartments = []
            for avito_type_name, avito_data in avito_apt_types.items():
                avito_simplified = name_mapping.get(avito_type_name, avito_type_name)
                if avito_simplified == simplified_name:
                    avito_apartments = avito_data.get('apartments', [])
                    print(f"   –ù–∞–π–¥–µ–Ω –≤ Avito –∫–∞–∫ '{avito_type_name}' ‚Üí '{avito_simplified}'")
                    break
            
            print(f"   –ö–≤–∞—Ä—Ç–∏—Ä –≤ Avito: {len(avito_apartments)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å —Ñ–æ—Ç–æ
            apartments_with_photos = 0
            for dc_apt in dc_apartments:
                apartment_photos = dc_apt.get('photos', [])
                if apartment_photos:
                    apartments_with_photos += 1
            
            print(f"   –ö–≤–∞—Ä—Ç–∏—Ä —Å —Ñ–æ—Ç–æ –≤ DomClick: {apartments_with_photos}")
            
            if apartments_with_photos == 0:
                print(f"‚ùå –ù–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä —Å —Ñ–æ—Ç–æ –¥–ª—è —Ç–∏–ø–∞ '{simplified_name}' - —Ç–∏–ø –Ω–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω!")
    
    print(f"\n" + "=" * 50)
    print("üèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")

if __name__ == "__main__":
    diagnose_greenwich()
