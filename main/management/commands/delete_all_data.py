from django.core.management.base import BaseCommand
from main.models import ResidentialComplex, SecondaryProperty, Employee, EmployeeReview, BranchOffice


class Command(BaseCommand):
    help = '–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –∞–≥–µ–Ω—Ç–æ–≤ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'

    def add_arguments(self, parser):
        parser.add_argument(
            '--confirm',
            action='store_true',
            help='–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤'
        )

    def handle(self, *args, **options):
        if not options['confirm']:
            self.stdout.write(
                self.style.WARNING(
                    '‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ:\n'
                    '- –í—Å–µ –∂–∏–ª—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã\n'
                    '- –í—Å—é –≤—Ç–æ—Ä–∏—á–Ω—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\n'
                    '- –í—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤/–∞–≥–µ–Ω—Ç–æ–≤\n'
                    '- –í—Å–µ –æ—Ç–∑—ã–≤—ã –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö\n'
                    '- –í—Å–µ —Ñ–∏–ª–∏–∞–ª—ã/–æ—Ñ–∏—Å—ã\n'
                )
            )
            
            confirm = input('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–¥–∞/–Ω–µ—Ç): ')
            if confirm.lower() not in ['–¥–∞', 'yes', 'y', '–¥']:
                self.stdout.write(self.style.ERROR('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.'))
                return

        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
        residential_count = ResidentialComplex.objects.count()
        secondary_count = SecondaryProperty.objects.count()
        employee_count = Employee.objects.count()
        review_count = EmployeeReview.objects.count()
        branch_count = BranchOffice.objects.count()

        self.stdout.write('–ù–∞—á–∏–Ω–∞—é —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...')

        # –£–¥–∞–ª—è–µ–º –æ—Ç–∑—ã–≤—ã –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö
        if review_count > 0:
            EmployeeReview.objects.all().delete()
            self.stdout.write(f'‚úÖ –£–¥–∞–ª–µ–Ω–æ {review_count} –æ—Ç–∑—ã–≤–æ–≤ –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö')

        # –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ (—ç—Ç–æ —Ç–∞–∫–∂–µ —É–¥–∞–ª–∏—Ç —Å–≤—è–∑–∏ —Å –∞–≥–µ–Ω—Ç–∞–º–∏)
        if residential_count > 0:
            ResidentialComplex.objects.all().delete()
            self.stdout.write(f'‚úÖ –£–¥–∞–ª–µ–Ω–æ {residential_count} –∂–∏–ª—ã—Ö –∫–æ–º–ø–ª–µ–∫—Å–æ–≤')

        if secondary_count > 0:
            SecondaryProperty.objects.all().delete()
            self.stdout.write(f'‚úÖ –£–¥–∞–ª–µ–Ω–æ {secondary_count} –æ–±—ä–µ–∫—Ç–æ–≤ –≤—Ç–æ—Ä–∏—á–Ω–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏')

        # –£–¥–∞–ª—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤/–∞–≥–µ–Ω—Ç–æ–≤
        if employee_count > 0:
            Employee.objects.all().delete()
            self.stdout.write(f'‚úÖ –£–¥–∞–ª–µ–Ω–æ {employee_count} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤/–∞–≥–µ–Ω—Ç–æ–≤')

        # –£–¥–∞–ª—è–µ–º —Ñ–∏–ª–∏–∞–ª—ã/–æ—Ñ–∏—Å—ã
        if branch_count > 0:
            BranchOffice.objects.all().delete()
            self.stdout.write(f'‚úÖ –£–¥–∞–ª–µ–Ω–æ {branch_count} —Ñ–∏–ª–∏–∞–ª–æ–≤/–æ—Ñ–∏—Å–æ–≤')

        self.stdout.write(
            self.style.SUCCESS(
                f'\nüéâ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n'
                f'–£–¥–∞–ª–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤:\n'
                f'- –ñ–∏–ª—ã—Ö –∫–æ–º–ø–ª–µ–∫—Å–æ–≤: {residential_count}\n'
                f'- –í—Ç–æ—Ä–∏—á–Ω–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏: {secondary_count}\n'
                f'- –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤/–∞–≥–µ–Ω—Ç–æ–≤: {employee_count}\n'
                f'- –û—Ç–∑—ã–≤–æ–≤: {review_count}\n'
                f'- –§–∏–ª–∏–∞–ª–æ–≤/–æ—Ñ–∏—Å–æ–≤: {branch_count}\n'
                f'\n–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.'
            )
        )
