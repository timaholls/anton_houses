#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–æ–ª–ª–µ–∫—Ü–∏–π DomRF, Avito –∏ DomClick.
–í—ã–≤–æ–¥–∏—Ç –ø–æ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏ –∏–∑ –∫–∞–∂–¥–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö.
"""
from pymongo import MongoClient
import json
from bson import ObjectId

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
MONGO_URI = "mongodb://root:Kfleirb_17@176.98.177.188:27017/admin"
DB_NAME = "houses"
COLLECTIONS = {
    "DomRF": "domrf",
    "Avito": "avito",
    "DomClick": "domclick"
}

class MongoJSONEncoder(json.JSONEncoder):
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å ObjectId –∏ –¥—Ä—É–≥–∏–µ BSON-—Ç–∏–ø—ã"""
    def default(self, obj):
        if isinstance(obj, ObjectId):
            return str(obj)
        return super().default(obj)

def show_sample_records():
    """–í—ã–≤–æ–¥–∏—Ç –ø–æ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏ –∏–∑ –∫–∞–∂–¥–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏"""
    print("üîç –ü–†–û–°–ú–û–¢–† –°–¢–†–£–ö–¢–£–†–´ –ö–û–õ–õ–ï–ö–¶–ò–ô")
    print("=" * 100)

    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
        client = MongoClient(MONGO_URI)
        db = client[DB_NAME]

        sources = {
            "DomRF": db[COLLECTIONS["DomRF"]],
            "Avito": db[COLLECTIONS["Avito"]],
            "DomClick": db[COLLECTIONS["DomClick"]],
        }

        for name, collection in sources.items():
            print(f"\nüì¶ {name} ({collection.name})")
            print("-" * 100)
            record = collection.find_one({})
            if record:
                # –ö—Ä–∞—Å–∏–≤–æ –≤—ã–≤–æ–¥–∏–º JSON —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π ObjectId
                print(json.dumps(record, ensure_ascii=False, indent=2, cls=MongoJSONEncoder))
            else:
                print("‚ùå –ö–æ–ª–ª–µ–∫—Ü–∏—è –ø—É—Å—Ç–∞!")

        client.close()
        print("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –î–∞–Ω–Ω—ã–µ –≤—ã–≤–µ–¥–µ–Ω—ã.")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    show_sample_records()
