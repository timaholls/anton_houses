#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –º–∞–ø–ø–∏–Ω–≥–æ–º
"""

import os
import sys
import django
from bson import ObjectId
from datetime import datetime, timezone

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('/home/art/PycharmProjects/anton_houses')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'anton_houses.settings')
django.setup()

from pymongo import MongoClient
from django.conf import settings


def get_mongo_connection():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–µ–∫—Ç–∞."""
    uri = getattr(settings, 'MONGO_URI', 'mongodb://root:Kfleirb_17@176.98.177.188:27017/admin')
    db_name = getattr(settings, 'DB_NAME', 'houses')
    client = MongoClient(uri)
    return client[db_name]


def rebuild_unified_record(unified_record):
    """–ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –º–∞–ø–ø–∏–Ω–≥–æ–º"""
    db = get_mongo_connection()

    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    source_ids = unified_record.get('_source_ids', {})

    domrf_record = None
    if source_ids.get('domrf'):
        try:
            domrf_record = db['domrf'].find_one({'_id': ObjectId(source_ids['domrf'])})
        except Exception as e:
            print(f"‚ùå Error getting DomRF: {e}")

    avito_record = None
    if source_ids.get('avito'):
        try:
            avito_record = db['avito'].find_one({'_id': ObjectId(source_ids['avito'])})
        except Exception as e:
            print(f"‚ùå Error getting Avito: {e}")

    domclick_record = None
    if source_ids.get('domclick'):
        try:
            domclick_record = db['domclick'].find_one({'_id': ObjectId(source_ids['domclick'])})
        except Exception as e:
            print(f"‚ùå Error getting DomClick: {e}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –∑–∞–ø–∏—Å—å
    if not avito_record and not domclick_record:
        print(f"‚ùå –ù–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –¥–ª—è unified_record {unified_record['_id']}")
        return None

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: DomRF > Avito > DomClick > —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≤ unified_record)
    latitude = None
    longitude = None

    if domrf_record:
        latitude = domrf_record.get('latitude')
        longitude = domrf_record.get('longitude')
    elif avito_record:
        avito_dev = avito_record.get('development', {})
        latitude = avito_dev.get('latitude')
        longitude = avito_dev.get('longitude')
    elif domclick_record:
        domclick_dev = domclick_record.get('development', {})
        latitude = domclick_dev.get('latitude')
        longitude = domclick_dev.get('longitude')
    else:
        latitude = unified_record.get('latitude')
        longitude = unified_record.get('longitude')

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
    new_record = {
        'latitude': latitude,
        'longitude': longitude,
        'source': 'unified',
        'created_by': 'script',
        'is_featured': unified_record.get('is_featured', False),
        'agent_id': unified_record.get('agent_id'),
        'updated_at': datetime.now(timezone.utc)
    }

    # 1. Development –∏–∑ Avito + photos –∏ construction_progress –∏–∑ DomClick
    if avito_record:
        avito_dev = avito_record.get('development', {})
        if isinstance(avito_dev, dict):
            new_record['development'] = {
                'name': avito_dev.get('name', ''),
                'address': avito_dev.get('address', ''),
                'price_range': avito_dev.get('price_range', ''),
                'parameters': avito_dev.get('parameters', {}),
                'korpuses': avito_dev.get('korpuses', []),
                'photos': []  # –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –∏–∑ DomClick
            }

            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –ñ–ö –∏–∑ DomClick
            if domclick_record:
                domclick_dev = domclick_record.get('development', {})
                if domclick_dev.get('photos'):
                    new_record['development']['photos'] = domclick_dev['photos']
                # –•–æ–¥ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞: development.construction_progress –∏–ª–∏ –∫–æ—Ä–µ–Ω—å
                dc_construction = domclick_dev.get('construction_progress') or domclick_record.get('construction_progress')
                if dc_construction:
                    new_record['construction_progress'] = dc_construction

    # 2. –û–±—ä–µ–¥–∏–Ω—è–µ–º apartment_types —Å –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ú –º–∞–ø–ø–∏–Ω–≥–æ–º
    new_record['apartment_types'] = {}

    if avito_record and domclick_record:
        avito_apt_types = avito_record.get('apartment_types', {})
        domclick_apt_types = domclick_record.get('apartment_types', {})

        # –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –º–∞–ø–ø–∏–Ω–≥
        name_mapping = {
            '–°—Ç—É–¥–∏—è': '–°—Ç—É–¥–∏—è',
            '1 –∫–æ–º.': '1',
            '1-–∫–æ–º–Ω': '1',
            '1-–∫–æ–º–Ω.': '1',
            '2 –∫–æ–º.': '2',  # ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û
            '2': '2',
            '2-–∫–æ–º–Ω': '2',
            '2-–∫–æ–º–Ω.': '2',
            '3': '3',
            '3-–∫–æ–º–Ω': '3',
            '3-–∫–æ–º–Ω.': '3',
            '4': '4',
            '4-–∫–æ–º–Ω': '4',
            '4-–∫–æ–º–Ω.': '4',
            '4-–∫–æ–º–Ω.+': '4',
            '4-–∫–æ–º–Ω+': '4'
        }

        # –°–Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã –∏–∑ DomClick (—á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å 1-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ)
        processed_types = set()

        for dc_type_name, dc_type_data in domclick_apt_types.items():
            # –£–ø—Ä–æ—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞
            simplified_name = name_mapping.get(dc_type_name, dc_type_name)

            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ —ç—Ç–æ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–∏–ø
            if simplified_name in processed_types:
                continue
            processed_types.add(simplified_name)

            # –ü–æ–ª—É—á–∞–µ–º –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏–∑ DomClick
            dc_apartments = dc_type_data.get('apartments', [])
            if not dc_apartments:
                continue

            # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–∏–ø –≤ Avito
            avito_apartments = []
            for avito_type_name, avito_data in avito_apt_types.items():
                avito_simplified = name_mapping.get(avito_type_name, avito_type_name)
                if avito_simplified == simplified_name:
                    avito_apartments = avito_data.get('apartments', [])
                    break

            # –ò–ó–ú–ï–ù–ï–ù–û: –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Avito
            if not avito_apartments:
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–∏–ø, –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ Avito

            # –û–±—ä–µ–¥–∏–Ω—è–µ–º: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä –≤ DomClick
            combined_apartments = []

            for i, dc_apt in enumerate(dc_apartments):
                # –ü–æ–ª—É—á–∞–µ–º –í–°–ï —Ñ–æ—Ç–æ —ç—Ç–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏–∑ DomClick –∫–∞–∫ –ú–ê–°–°–ò–í
                apartment_photos = dc_apt.get('photos', [])

                # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç—É –∫–≤–∞—Ä—Ç–∏—Ä—É
                if not apartment_photos:
                    continue

                # –ë–µ—Ä–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É –∏–∑ Avito (—Ü–∏–∫–ª–∏—á–µ—Å–∫–∏)
                avito_apt = avito_apartments[i % len(avito_apartments)]

                combined_apartments.append({
                    'title': avito_apt.get('title', ''),
                    'price': avito_apt.get('price', ''),
                    'pricePerSquare': avito_apt.get('pricePerSquare', ''),
                    'completionDate': avito_apt.get('completionDate', ''),
                    'url': avito_apt.get('urlPath', ''),
                    'image': apartment_photos  # –ú–ê–°–°–ò–í –≤—Å–µ—Ö —Ñ–æ—Ç–æ —ç—Ç–æ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏!
                })

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å —Ñ–æ—Ç–æ –ò –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ Avito
            if combined_apartments:
                new_record['apartment_types'][simplified_name] = {
                    'apartments': combined_apartments
                }

    # 3. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    new_record['_source_ids'] = source_ids

    return new_record


def main():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π"""
    print("üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –í–°–ï–• –û–ë–™–ï–î–ò–ù–ï–ù–ù–´–• –ó–ê–ü–ò–°–ï–ô")
    print("=" * 60)

    db = get_mongo_connection()
    unified_col = db['unified_houses']

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    unified_records = list(unified_col.find({}))
    total_records = len(unified_records)

    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {total_records} –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π")

    updated_count = 0
    error_count = 0

    for i, record in enumerate(unified_records, 1):
        try:
            record_name = record.get('development', {}).get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            print(f"\n[{i}/{total_records}] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {record_name}")

            # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –º–∞–ø–ø–∏–Ω–≥–æ–º
            new_record = rebuild_unified_record(record)

            if new_record:
                # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—É—é –∑–∞–ø–∏—Å—å –Ω–æ–≤–æ–π
                result = unified_col.replace_one(
                    {'_id': record['_id']},
                    new_record
                )

                if result.modified_count == 1:
                    print(f"‚úÖ –ó–∞–ø–∏—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
                    updated_count += 1
                else:
                    print(f"‚ö†Ô∏è –ó–∞–ø–∏—Å—å –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å")
                error_count += 1

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø–∏—Å–∏ {i}: {e}")
            error_count += 1

    print(f"\n" + "=" * 60)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ì–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø:")
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {error_count}")
    print(f"üìà –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {total_records}")
    print("üèÅ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")


if __name__ == "__main__":
    main()
