#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–æ–∫
–ó–∞–ø—É—Å–∫: python3 test_subscription_system.py
"""

import os
import sys
import json
import requests
from datetime import datetime
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://localhost:8000"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
TEST_EMAIL = "test@example.com"
TEST_NAME = "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
SMTP_SERVER = os.getenv('SMTP_SERVER', 'smtp.gmail.com')
SMTP_PORT = int(os.getenv('SMTP_PORT', '587'))
SENDER_EMAIL = os.getenv('SENDER_EMAIL', 'noreply@century21-ufa.ru')
APP_PASSWORD = os.getenv('APP_PASSWORD', '')

def test_subscription_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–æ–¥–ø–∏—Å–æ–∫"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–æ–∫...")
    
    # 1. –¢–µ—Å—Ç –ø–æ–¥–ø–∏—Å–∫–∏
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏...")
    subscribe_data = {
        "name": TEST_NAME,
        "email": TEST_EMAIL,
        "subscribe_to_projects": True,
        "subscribe_to_promotions": True
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/subscribe/",
            json=subscribe_data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–∞:", result.get('message'))
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏:", result.get('error'))
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    # 2. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    try:
        response = requests.get(f"{BASE_URL}/api/subscription-stats/")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                stats = result.get('stats', {})
                print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫:")
                print(f"   - –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫: {stats.get('total_subscriptions', 0)}")
                print(f"   - –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: {stats.get('active_subscriptions', 0)}")
                print(f"   - –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã: {stats.get('project_subscribers', 0)}")
                print(f"   - –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –∞–∫—Ü–∏–∏: {stats.get('promotion_subscribers', 0)}")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", result.get('error'))
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    # 3. –¢–µ—Å—Ç –æ—Ç–ø–∏—Å–∫–∏
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø–∏—Å–∫–∏...")
    unsubscribe_data = {
        "email": TEST_EMAIL
    }
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/unsubscribe/",
            json=unsubscribe_data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ –û—Ç–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–∞:", result.get('message'))
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø–∏—Å–∫–∏:", result.get('error'))
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")


def test_pages():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü...")
    
    pages = [
        ("/", "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        ("/unsubscribe/", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–ø–∏—Å–∫–∏"),
    ]
    
    for url, name in pages:
        try:
            response = requests.get(f"{BASE_URL}{url}")
            if response.status_code == 200:
                print(f"‚úÖ {name}: OK")
            else:
                print(f"‚ùå {name}: HTTP {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"‚ùå {name}: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - {e}")


def test_mongodb_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB"""
    print("\nüóÑÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Django
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'anton_houses.settings')
        import django
        django.setup()
        
        from main.services.mongo_service import get_mongo_connection
        
        db = get_mongo_connection()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é subscriptions
        subscriptions = db['subscriptions']
        count = subscriptions.count_documents({})
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB: OK")
        print(f"   - –ó–∞–ø–∏—Å–µ–π –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ subscriptions: {count}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
        recent = list(subscriptions.find().sort('created_at', -1).limit(3))
        if recent:
            print("   - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏:")
            for sub in recent:
                print(f"     * {sub.get('email', 'N/A')} - {sub.get('name', 'N/A')} ({'–∞–∫—Ç–∏–≤–Ω–∞' if sub.get('is_active') else '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'})")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–æ–∫")
    print(f"üì° –ë–∞–∑–æ–≤—ã–π URL: {BASE_URL}")
    print(f"üìß –¢–µ—Å—Ç–æ–≤—ã–π email: {TEST_EMAIL}")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP
    print("üìß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ SMTP:")
    print(f"   - SMTP Server: {SMTP_SERVER}")
    print(f"   - SMTP Port: {SMTP_PORT}")
    print(f"   - Sender Email: {SENDER_EMAIL}")
    print(f"   - App Password: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if APP_PASSWORD else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    test_mongodb_connection()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    test_pages()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    test_subscription_api()
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ SMTP:")
    print("   SMTP_SERVER=smtp.gmail.com")
    print("   SMTP_PORT=587")
    print("   SENDER_EMAIL=your-email@domain.com")
    print("   APP_PASSWORD=your-app-password")
    print("3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —á–µ—Ä–µ–∑ manual-matching")
    print("4. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∞–∫—Ü–∏—é —á–µ—Ä–µ–∑ promotions API")
    print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∏—Å–µ–º")
    print("\nüìù –ü—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞:")
    print("SMTP_SERVER=smtp.gmail.com")
    print("SMTP_PORT=587")
    print("SENDER_EMAIL=noreply@century21-ufa.ru")
    print("APP_PASSWORD=your_gmail_app_password")


if __name__ == '__main__':
    main()
